/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Jamal
 */
class task{
    private String description;
    Date deadLine;
    private int task_No;
    
    public task(int task_No, String description, Date deadLine){
        this.task_No=task_No;
        this.description=description;
        this.deadLine=deadLine;
    }
   /* public int getid(){
        return ID;
}*/
       public int getTask_No(){
        return task_No;
}
        public Date getDeadLine(){
        return deadLine;
}
         public String getDescription(){
        return description;
}
}
         
public class Job extends javax.swing.JFrame {

    /**
     * Creates new form Job
     */
    public Job() {
        initComponents();
        show_tasks();
    }
    public ArrayList<task> taskList(String sa){
    ArrayList<task> taskList =new ArrayList<>();
    
                  try{        
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/swpro","root", "");
            Statement stmt = conn.createStatement();
            String sqlstr="Select * FROM tasks where "+sa;
            ResultSet rs=stmt.executeQuery(sqlstr);
            task t;
            while(rs.next()){
                t = new task(rs.getInt("task_No"),rs.getString("description"),rs.getDate("deadLine"));
                taskList.add(t);  
            }
            conn.close();
    }
        catch (SQLException ex) {
            Logger.getLogger(Meeting1.class.getName()).log(Level.SEVERE, null, ex);
        }
        return taskList;          
    }
    public void show_tasks(){
        ArrayList<task> list=taskList("Done is NULL");
        DefaultTableModel model=(DefaultTableModel) TasksTable.getModel();
        Object []row =new Object[3];
        for(int i=0; i<list.size();i++){
            row[0]=list.get(i).getTask_No();
            row[1]=list.get(i).getDescription();
            row[2]=list.get(i).getDeadLine();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        search = new javax.swing.JComboBox<>();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TasksTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(0, 102, 204));
        jLabel2.setFont(new java.awt.Font("Harrington", 1, 24)); // NOI18N
        jLabel2.setText("search by:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 120, 30));

        search.setBackground(new java.awt.Color(89, 146, 204));
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", " " }));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 70, 25));

        jTextField5.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(89, 146, 204));
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 130, 25));

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 80, -1));

        jButton1.setBackground(new java.awt.Color(89, 146, 204));
        jButton1.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 330, 30));

        TasksTable.setBackground(new java.awt.Color(240, 240, 240));
        TasksTable.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        TasksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Number", "Description", "Deadline"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TasksTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 550, 130));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Harrington", 1, 14)); // NOI18N
        jLabel4.setText("Description :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 100, 20));

        jTextField3.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 130, -1));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Harrington", 1, 14)); // NOI18N
        jLabel5.setText("Dead Line :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, -1, 20));

        jTextField4.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, 80, -1));

        jButton4.setBackground(new java.awt.Color(89, 146, 204));
        jButton4.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Add Task");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 140, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Main frame = new Main();
        frame.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jTextField5.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please Enter Task ID");
            return;
        }
        try{
            int t_id = Integer.parseInt(jTextField5.getText());
            ArrayList<task> list=taskList("task_No = "+t_id);
            DefaultTableModel model=(DefaultTableModel) TasksTable.getModel();
            model.setRowCount(0);
            Object []row =new Object[3];
            for(int i=0; i<list.size();i++){
                row[0]=list.get(i).getTask_No();
                row[1]=list.get(i).getDescription();
                row[2]=list.get(i).getDeadLine();
                model.addRow(row);
            }
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Task ID must be Number only");
            jTextField5.setText("");
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try{        
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/swpro","root", "");
            Statement stmt = conn.createStatement();
            String sqlstr="INSERT INTO `tasks` (`task_No`, `description`, `deadLine`, `Done`) VALUES (NULL, '"+jTextField3.getText()+"', '"+jTextField4.getText()+"', NULL)";
            stmt.executeUpdate(sqlstr);
            conn.close();
        }
        catch (SQLException ex) {
            Logger.getLogger(Meeting1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Job().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TasksTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JComboBox<String> search;
    // End of variables declaration//GEN-END:variables
}
